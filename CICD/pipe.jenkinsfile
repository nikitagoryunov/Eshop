pipeline {
    agent {
        kubernetes {
            yaml """
kind: Pod
metadata:
  name: kaniko
spec:
  containers:
  - name: kubectl
    image: joshendriks/alpine-k8s:latest
    command:
    - /bin/cat
    tty: true
  - name: kaniko
    image: gcr.io/kaniko-project/executor:debug
    imagePullPolicy: IfNotPresent
    command:
    - cat
    tty: true
    volumeMounts:
      - name: jenkins-docker-cfg
        mountPath: /kaniko/.docker
  volumes:
  - name: jenkins-docker-cfg
    projected:
      sources:
      - secret:
          name: kryukov-local
          items:
            - key: .dockerconfigjson
              path: config.json
"""
        }
    }
      stages {
        // Удалить если pipeline script from SCM
        stage('GIT') {
            steps {
                git branch: 'main', url: 'https://github.com/nikitagoryunov/Eshop.git'
            }
        }
      stage('BUILD') {
        steps {
          container(name: 'kaniko') {
            sh '''
              /kaniko/executor --dockerfile `pwd`/Dockerfile --context `pwd` --destination=nagoryunov/shop:v0.1
            '''
          }
        }
      }
        stage('DEPLOY') {
            steps {
              container('kubectl'){
                withCredentials([kubeconfigFile(credentialsId: 'cube-conf-admin', variable: 'KUBECONFIG')]) {
                  sh '''
                    pwd
                    kubectl apply -f deploy_k8s/django 
                    kubectl apply -f deploy_k8s/postgres
                  '''
                }
              }
            }
        }
      }
}
